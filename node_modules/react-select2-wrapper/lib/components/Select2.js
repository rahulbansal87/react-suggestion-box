'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

require('select2');

var Select2 = (function (_Component) {
  _inherits(Select2, _Component);

  _createClass(Select2, null, [{
    key: 'propTypes',
    value: {
      data: _react.PropTypes.array,
      events: _react.PropTypes.array,
      options: _react.PropTypes.object,
      multiple: _react.PropTypes.bool,
      onOpen: _react.PropTypes.func,
      onClose: _react.PropTypes.func,
      onSelect: _react.PropTypes.func,
      onChange: _react.PropTypes.func,
      onUnselect: _react.PropTypes.func
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      data: [],
      events: [['change', 'onChange'], ['select2:open', 'onOpen'], ['select2:close', 'onClose'], ['select2:select', 'onSelect'], ['select2:unselect', 'onUnselect']],
      options: {},
      multiple: false
    },
    enumerable: true
  }]);

  function Select2(props) {
    _classCallCheck(this, Select2);

    _get(Object.getPrototypeOf(Select2.prototype), 'constructor', this).call(this, props);
    this.el = null;
  }

  _createClass(Select2, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this = this;

      this.el = (0, _jquery2['default'])(_reactDom2['default'].findDOMNode(this));
      this.el.select2(this.props.options);

      this.props.events.forEach(function (event) {
        _this.el.on(event[0], _this.props[event[1]]);
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.el.select2('destroy');
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2['default'].createElement(
        'select',
        { multiple: this.props.multiple },
        this.props.data.map(function (item, k) {
          if (typeof item === 'string' || !!item && typeof item === 'object' && Object.prototype.toString.call(item) === '[object String]') {
            return _react2['default'].createElement(
              'option',
              { key: 'option-' + k, value: item },
              item
            );
          }
          return _react2['default'].createElement(
            'option',
            { key: 'option-' + k, value: item.id },
            item.text
          );
        })
      );
    }
  }]);

  return Select2;
})(_react.Component);

exports['default'] = Select2;
module.exports = exports['default'];